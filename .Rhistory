VaccineGeneral, GENERALM, GENERALY, TimeLastShot, VaccinePregnant, VaccineAdult, VaccineRisk,
Cluster, OutbreakSize) |>
# fill na in OutbreakSize with -1
mutate(OutbreakSize = ifelse(is.na(OutbreakSize), -1, OutbreakSize),
OutbreakSize = factor(OutbreakSize,
levels = c(0:3),
labels = c('Low', 'Normal', 'High', 'Resurgence')),
CoverageDTP1 = CoverageDTP1*100,
CoverageDTP3 = CoverageDTP3*100,
VaccinePregnant = case_when(VaccinePregnant ~ 'Yes',
VaccinePregnant ~ 'No',
TRUE ~ 'Unavailable'),
VaccineAdult = case_when(VaccineAdult ~ 'Yes',
VaccineAdult ~ 'No',
TRUE ~ 'Unavailable'),
VaccineRisk = case_when(VaccineRisk ~ 'Yes',
VaccineRisk ~ 'No',
TRUE ~ 'Unavailable'),
VaccineCode = factor(VaccineCode,
levels = c('wP', 'aP', 'Both')),
Cluster = factor(Cluster,
levels = c('Low', 'Mild', 'High')))
DataAll <- DataAll |>
select(VaccineCode, CoverageDTP1, CoverageDTP3,
VaccineGeneral, GENERALM, GENERALY, TimeLastShot, VaccinePregnant, VaccineAdult, VaccineRisk,
Cluster, OutbreakSize) |>
# fill na in OutbreakSize with -1
mutate(OutbreakSize = ifelse(is.na(OutbreakSize), -1, OutbreakSize),
OutbreakSize = factor(OutbreakSize,
levels = c(0:3),
labels = c('Low', 'Normal', 'High', 'Resurgence')),
CoverageDTP1 = CoverageDTP1*100,
CoverageDTP3 = CoverageDTP3*100,
VaccineCode = factor(VaccineCode,
levels = c('wP', 'aP', 'Both')),
Cluster = factor(Cluster,
levels = c('Low', 'Mild', 'High')))
View(DataAll)
DataAll <- read.csv("../Outcome/S table1.csv")
DataAll <- DataAll |>
select(VaccineCode, CoverageDTP1, CoverageDTP3,
VaccineGeneral, GENERALM, GENERALY, TimeLastShot, VaccinePregnant, VaccineAdult, VaccineRisk,
Cluster, OutbreakSize) |>
# fill na in OutbreakSize with -1
mutate(OutbreakSize = ifelse(is.na(OutbreakSize), -1, OutbreakSize),
OutbreakSize = factor(OutbreakSize,
levels = c(0:3),
labels = c('Low', 'Normal', 'High', 'Resurgence')),
CoverageDTP1 = CoverageDTP1*100,
CoverageDTP3 = CoverageDTP3*100,
VaccineCode = factor(VaccineCode,
levels = c('wP', 'aP', 'Both')),
Cluster = factor(Cluster,
levels = c('Low', 'Mild', 'High')))
table_1 <- tableby(Cluster~.,
data = DataAll,
control = tableby.control(digits  = 2,
digits.count = 0,
digits.pct = 2,
digits.p = 3),
numeric.stats = c("Nmiss", 'median', 'q1q3'))
table_labels <- list(
Cluster = 'Disease burden',
VaccineCode = 'Vaccine type',
CoverageDTP1 = 'Coverage of DTP1 (%)',
CoverageDTP3 = 'Coverage of DTP3 (%)',
VaccineGeneral = 'General vaccine recommendation',
GENERALM = 'General vaccine recommendation for toddlers, -3yr',
GENERALY = 'General vaccine recommendation for children, 3+yr',
TimeLastShot = 'Time of last shot (months)',
VaccinePregnant = 'Vaccine recommendation for pregnant',
VaccineAdult = 'Vaccine recommendation for adults',
VaccineRisk = 'Vaccine recommendation for risk groups',
OutbreakSize = 'Pertussis status in 2022/2023'
)
summary(table_1,
labelTranslations = table_labels)
# table 1
knitr::knit('./Code/table1.Rmd',
output = './Outcome/table1.md')
# table 1
knitr::knit('./Code/table1.Rmd',
output = './Outcome/table1.md')
# Load the data
source('./Code/data.R')
remove(list = ls())
# figure 4: the relationship between vaccination strategy and resurgence
source('./Code/fig4.R')
remove(list = ls())
# table 1
knitr::knit('./Code/table1.Rmd',
output = './Outcome/table1.md')
# Load the data
source('./Code/data.R')
remove(list = ls())
# This script generates Figure 5 in the manuscript.
# To analyze the relationship between the pertussis resurgence and vaccination strategy in different countries,
# we first cluster the countries based on the incidence of pertussis from 2010 to 2019.
# We then examine the importance of different variables in predicting the disease burden in each cluster
# using random forest analysis.
# packages ----------------------------------------------------------------
library(tidyverse)
library(patchwork)
library(openxlsx)
library(sf)
library(cowplot)
library(paletteer)
library(Cairo)
library(factoextra)
library(ggdendroplot)
library(caret)
library(mice)
library(randomForest)
library(edarf)
library(GGally)
source('./Code/function.R')
# Data --------------------------------------------------------------------
DataAll <- read.csv("./Outcome/S table1.csv") |>
mutate(CoverageDTP1 = CoverageDTP1/100,
CoverageDTP3 = CoverageDTP3/100,
VaccineGeneral = as.factor(VaccineGeneral),
GENERALY = as.factor(GENERALY),
GENERALM = as.factor(GENERALM),
VaccineAdult = if_else(VaccineAdult == 1, 'Yes', 'No'),
VaccinePregnant = if_else(VaccinePregnant == 1, 'Yes', 'No'),
VaccineRisk = if_else(VaccineRisk == 1, 'Yes', 'No'),
VaccineAP = if_else(VaccineCode %in% c('aP', 'Both'), 1, 0),
VaccineWP = if_else(VaccineCode %in% c('wP', 'Both'), 1, 0),
OutbreakSize2022 = factor(OutbreakSize2022, levels = c('Low', 'Normal', 'High', 'Resurgence')),
OutbreakSize2023 = factor(OutbreakSize2023, levels = c('Low', 'Normal', 'High', 'Resurgence')))
ggsave("./Outcome/S fig2_1.png",
DataAll |>
select(CoverageDTP1:VaccineGeneral, -TimeFirstShot) |>
ggpairs(columnLabels = c('DTP1 coverage', 'DTP3 coverage',
'Vaccine for pregnant', 'Vaccine for adult', 'Vaccine for risk',
'Time of\nlast general vaccine shot (months)',
'General vaccine recommendation\nfor toddlers, -3yr',
'General vaccine recommendation\nfor children, 3+yr',
'General vaccine recommendation'),
bins = 30,
title = 'Correlation plot'),
width = 15,
height = 15,
dpi = 300)
# map data ----------------------------------------------------------------
DataMap <- st_read("./Data/world.zh.json") |>
filter(iso_a3  != "ATA")
DataAll[!DataAll$CODE %in% DataMap$iso_a3, 'NAME']
DataInciRaw <- read.xlsx("./Data/Pertussis incidence.xlsx") |>
select(1:3, `2023`:`2010`)
DataInciRaw <- DataInciRaw |>
filter(!is.na(Disease)) |>
select(-c(Denominator, Disease)) |>
rename(NAME = `Country./.Region`) |>
filter(NAME %in% DataAll$NAME) |>
# trance 2023:2010 to numeric
mutate(across('2023':'2010', ~as.numeric(.)))
DataInciRaw |>
select(NAME, `2019`:`2010`) |>
pivot_longer(cols = `2019`:`2010`, names_to = 'Year', values_to = 'Incidence') |>
group_by(NAME) |>
summarise(Incidence = median(Incidence, na.rm = T)) |>
arrange(desc(Incidence)) |>
head(10) |>
as.data.frame()
# incidence cluster -------------------------------------------------------
set.seed(20240521)
fill_color_disease <- rev(c('#DD5129FF', '#FAB255FF', '#0F7BA2FF', '#43B284FF' ))
DataInci <- DataInciRaw |>
select('2019':'2010')
names(DataInci) <- paste0("X", names(DataInci))
rownames(DataInci) <- DataInciRaw$NAME
# random forest imputation
DataMatInci <-DataInci|>
mice(method = 'rf', m = 1) |>
complete() |>
as.matrix()
DataMatInci <- log(DataMatInci + 0.001)
# hierarchical clustering
hcdata <- scale(DataMatInci) |>
hkmeans(3)
DataCluster <- hcdata$cluster |>
as.data.frame() |>
mutate(Cluster = as.factor(hcdata$cluster),
Cluster = fct_recode(Cluster, 'Low' = '1', 'Mild' = '3', 'High' = '2'),
Cluster = factor(Cluster, levels = c('Low', 'Mild', 'High'))) |>
select(Cluster) |>
rownames_to_column('NAME')
DataAll <- DataAll |>
left_join(DataCluster, by = 'NAME')
DataCluster <- cbind(DataCluster, exp(DataMatInci)) |>
pivot_longer(cols = -c(NAME, Cluster), names_to = 'Year', values_to = 'IncidenceImput') |>
mutate(Year = as.numeric(gsub('X', '', Year)))
table(hcdata$cluster)
View(DataAll)
DataAll |>
group_by(Cluster) |>
summarise(Incidence = mean(IncidencePre, na.rm = T))
# Load the data
source('./Code/data.R')
remove(list = ls())
# This script generates Figure 5 in the manuscript.
# To analyze the relationship between the pertussis resurgence and vaccination strategy in different countries,
# we first cluster the countries based on the incidence of pertussis from 2010 to 2019.
# We then examine the importance of different variables in predicting the disease burden in each cluster
# using random forest analysis.
# packages ----------------------------------------------------------------
library(tidyverse)
library(patchwork)
library(openxlsx)
library(sf)
library(cowplot)
library(paletteer)
library(Cairo)
library(factoextra)
library(ggdendroplot)
library(caret)
library(mice)
library(randomForest)
library(edarf)
library(GGally)
source('./Code/function.R')
# Data --------------------------------------------------------------------
DataAll <- read.csv("./Outcome/S table1.csv") |>
mutate(CoverageDTP1 = CoverageDTP1/100,
CoverageDTP3 = CoverageDTP3/100,
VaccineGeneral = as.factor(VaccineGeneral),
GENERALY = as.factor(GENERALY),
GENERALM = as.factor(GENERALM),
VaccineAdult = if_else(VaccineAdult == 1, 'Yes', 'No'),
VaccinePregnant = if_else(VaccinePregnant == 1, 'Yes', 'No'),
VaccineRisk = if_else(VaccineRisk == 1, 'Yes', 'No'),
VaccineAP = if_else(VaccineCode %in% c('aP', 'Both'), 1, 0),
VaccineWP = if_else(VaccineCode %in% c('wP', 'Both'), 1, 0),
OutbreakSize2022 = factor(OutbreakSize2022, levels = c('Low', 'Normal', 'High', 'Resurgence')),
OutbreakSize2023 = factor(OutbreakSize2023, levels = c('Low', 'Normal', 'High', 'Resurgence')))
ggsave("./Outcome/S fig2_1.png",
DataAll |>
select(CoverageDTP1:VaccineGeneral, -TimeFirstShot) |>
ggpairs(columnLabels = c('DTP1 coverage', 'DTP3 coverage',
'Vaccine for pregnant', 'Vaccine for adult', 'Vaccine for risk',
'Time of\nlast general vaccine shot (months)',
'General vaccine recommendation\nfor toddlers, -3yr',
'General vaccine recommendation\nfor children, 3+yr',
'General vaccine recommendation'),
bins = 30,
title = 'Correlation plot'),
width = 15,
height = 15,
dpi = 300)
# map data ----------------------------------------------------------------
DataMap <- st_read("./Data/world.zh.json") |>
filter(iso_a3  != "ATA")
DataAll[!DataAll$CODE %in% DataMap$iso_a3, 'NAME']
DataInciRaw <- read.xlsx("./Data/Pertussis incidence.xlsx") |>
select(1:3, `2023`:`2010`)
DataInciRaw <- DataInciRaw |>
filter(!is.na(Disease)) |>
select(-c(Denominator, Disease)) |>
rename(NAME = `Country./.Region`) |>
filter(NAME %in% DataAll$NAME) |>
# trance 2023:2010 to numeric
mutate(across('2023':'2010', ~as.numeric(.)))
DataInciRaw |>
select(NAME, `2019`:`2010`) |>
pivot_longer(cols = `2019`:`2010`, names_to = 'Year', values_to = 'Incidence') |>
group_by(NAME) |>
summarise(Incidence = median(Incidence, na.rm = T)) |>
arrange(desc(Incidence)) |>
head(10) |>
as.data.frame()
# incidence cluster -------------------------------------------------------
set.seed(20240521)
fill_color_disease <- rev(c('#DD5129FF', '#FAB255FF', '#0F7BA2FF', '#43B284FF' ))
DataInci <- DataInciRaw |>
select('2019':'2010')
names(DataInci) <- paste0("X", names(DataInci))
rownames(DataInci) <- DataInciRaw$NAME
# random forest imputation
DataMatInci <-DataInci|>
mice(method = 'rf', m = 1) |>
complete() |>
as.matrix()
DataMatInci <- log(DataMatInci + 0.001)
# hierarchical clustering
hcdata <- scale(DataMatInci) |>
hkmeans(3)
DataCluster <- hcdata$cluster |>
as.data.frame() |>
mutate(Cluster = as.factor(hcdata$cluster),
Cluster = fct_recode(Cluster, 'Low' = '3', 'Mild' = '1', 'High' = '2'),
Cluster = factor(Cluster, levels = c('Low', 'Mild', 'High'))) |>
select(Cluster) |>
rownames_to_column('NAME')
DataAll <- DataAll |>
left_join(DataCluster, by = 'NAME')
DataCluster <- cbind(DataCluster, exp(DataMatInci)) |>
pivot_longer(cols = -c(NAME, Cluster), names_to = 'Year', values_to = 'IncidenceImput') |>
mutate(Year = as.numeric(gsub('X', '', Year)))
table(hcdata$cluster)
DataAll |>
group_by(Cluster) |>
summarise(Incidence = mean(IncidencePre, na.rm = T))
source("D:/OneDrive - work/OneDrive - MSFT/XMU/likangguo/2024/06 pertussis/PertussisVaccine/Code/fig4.R", echo=TRUE)
ggplot(DataAll,
aes(x = Cluster, y = IncidencePre, fill = Cluster)) +
geom_boxplot()
fill_color <- c('#43B284FF', '#FAB255FF', '#DD5129FF')
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre, fill = Cluster)) +
geom_boxplot()+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = "Year", y = "Incidence") +
guides(color = guide_legend(title = 'Cluster'))
fig_1
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")+
# panel b -----------------------------------------------------------------
DataMapPlot <- DataMap |>
left_join(DataAll[,c('CODE', 'Cluster')], by = c('iso_a3' = 'CODE'))
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
scale_x_discrete(limits = levels(DataAll$Cluster))+
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
trans = 'log10',
limits = c(0, NA)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre+0.001, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
scale_x_discrete(limits = levels(DataAll$Cluster))+
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
trans = 'log10',
limits = c(0, NA)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre+0.001, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
scale_x_discrete(limits = levels(DataAll$Cluster))+
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
trans = 'log10',
limits = c(0.001, NA)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll,
aes(x = Cluster, y = IncidencePre+0.001, fill = Cluster)) +
geom_boxplot(show.legend = F)+
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster))+
scale_x_discrete(limits = levels(DataAll$Cluster))+
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0, NA)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
library(scales)
fig_1 <- ggplot(DataAll, aes(x = Cluster, y = IncidencePre + 0.001, fill = Cluster)) +
geom_boxplot(show.legend = F) +
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster)) +
scale_x_discrete(limits = levels(DataAll$Cluster)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0, NA),
trans = logp_trans(),
labels = function(x) format(10^x - 0.001, digits = 2)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
logp_trans <- function() {
trans_new(name = 'logp',
transform = function(x) log10(x + 0.001),
inverse = function(x) 10^x - 0.001)
}
fig_1 <- ggplot(DataAll, aes(x = Cluster, y = IncidencePre + 0.001, fill = Cluster)) +
geom_boxplot(show.legend = F) +
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster)) +
scale_x_discrete(limits = levels(DataAll$Cluster)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0, NA),
trans = logp_trans(),
labels = function(x) format(10^x - 0.001, digits = 2)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll, aes(x = Cluster, y = IncidencePre + 0.001, fill = Cluster)) +
geom_boxplot(show.legend = F) +
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster)) +
scale_x_discrete(limits = levels(DataAll$Cluster)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0, NA),
trans = 'log10') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll, aes(x = Cluster, y = IncidencePre + 0.001, fill = Cluster)) +
geom_boxplot(show.legend = F) +
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster)) +
scale_x_discrete(limits = levels(DataAll$Cluster)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0.001, NA),
trans = 'log10') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
fig_1 <- ggplot(DataAll, aes(x = Cluster, y = IncidencePre + 0.001, fill = Cluster)) +
geom_boxplot(show.legend = F) +
scale_fill_manual(values = fill_color,
breaks = levels(DataAll$Cluster),
limits = levels(DataAll$Cluster)) +
scale_x_discrete(limits = levels(DataAll$Cluster)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
limits = c(0.001, NA),
breaks = c(0, 0.1, 1, 10, 100, 1000) + 0.001,
labels = c(0, 0.1, 1, 10, 100, 1000),
trans = 'log10') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(color = 'black', face = 'plain'),
axis.title = element_text(color = 'black', face = 'plain'),
plot.title.position = 'plot') +
labs(title = "A", x = NULL, y = "Median incidence (2010-2019)")
fig_1
# Load the data
source('./Code/data.R')
remove(list = ls())
# figure 4: the relationship between vaccination strategy and resurgence
source('./Code/fig4.R')
remove(list = ls())
