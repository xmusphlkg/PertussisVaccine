limits = plot_range) +
labs(title = 'b', x = NULL, y = NULL) +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.ticks.x = element_blank(),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
remove(data, data_2022, data_2023,
plot_breaks, plot_range,
results, emm, pairs, pairs_summary)
# cn ----------------------------------------------------------------------
data <- df_raw |>
filter(Country == 'CN')
data_2023 <- df_clean |>
filter(Country == 'CN') |>
mutate(month = factor(Month,
levels = c(7:12, 1:6),
labels = 101:112),
month = as.integer(as.character(month))) |>
filter(stage == '2023 Jun. onwards')
data_2022 <- df_clean |>
filter(Country == 'CN') |>
mutate(month = factor(Month,
levels = c(7:12, 1:6),
labels = 101:112),
month = as.integer(as.character(month))) |>
filter(stage != '2023 Jun. onwards')
plot_breaks <- pretty(c(0, max(data$Cases)))
plot_range <- range(plot_breaks)
data$Year <- as.factor(data$Year)
data$Month <- as.factor(data$Month)
data$Stage <- factor(data$stage,
levels = unique(data$stage))
results <- lmer(Cases ~ Stage + (1|Month), data = data)
emm <- emmeans(results, ~ Stage)
pairs <- pairs(emm)
pairs_summary <- summary(pairs, adjust = "bonferroni") |>
as.data.frame() |>
separate(contrast, c('stage1', 'stage2'), sep = ' \\- ') |>
rename('group1' = 'stage1',
'group2' = 'stage2') |>
mutate(y.position = plot_range[2] * c(0.95, 0.85, 0.75),
p.value = ifelse(p.value < 0.001, '***', format(round(p.value, 3), nsmall = 3)))
fig2_1 <- ggplot(data_2022, aes(x = month, y = median)) +
geom_vline(xintercept = 106.5,
linetype = 'dashed',
color = 'black',
size = 0.5) +
geom_smooth(aes(color = stage, fill = stage),
method = 'loess',
se = T,
linewidth = 1) +
geom_line(data = data_2023, aes(color = stage),
linewidth = 1) +
geom_ribbon(data = data_2023, aes(ymin = Q1, ymax = Q3, fill = stage), alpha = 0.3) +
scale_x_continuous(breaks = 101:112,
labels = month.abb[c(7:12, 1:6)],
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'c', x = 'Month', y = 'Monthly incidence') +
scale_color_manual(values = fill_color) +
scale_fill_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_text(size = 12, color = "black"))
fig2_2 <- ggplot(data, aes(x = stage, y = Cases)) +
geom_boxplot(aes(color = stage),
show.legend = F)+
stat_pvalue_manual(pairs_summary,
hide.ns = F) +
coord_cartesian(clip = "off")+
scale_y_continuous(expand = expansion(mult = c(0, 0)),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'd', x = NULL, y = NULL) +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.ticks.x = element_blank(),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
remove(data, data_2022, data_2023,
plot_breaks, plot_range,
results, emm, pairs, pairs_summary)
# us ----------------------------------------------------------------------
data <- df_raw |>
filter(Country == 'US')
data_2023 <- df_clean |>
filter(Country == 'US') |>
filter(Week <= 52) |>
mutate(week = factor(Week,
levels = c(26:52, 1:25),
labels = 201:252),
week = as.integer(as.character(week))) |>
filter(stage == '2023 Jun. onwards')
data_2022 <- df_clean |>
filter(Country == 'US') |>
filter(Week <= 52) |>
mutate(week = factor(Week,
levels = c(26:52, 1:25),
labels = 201:252),
week = as.integer(as.character(week))) |>
filter(stage != '2023 Jun. onwards')
plot_breaks <- pretty(c(0, max(data$Cases)))
plot_range <- range(plot_breaks)
data$Year <- as.factor(data$Year)
data$Week <- as.factor(data$Week)
data$Stage <- factor(data$stage,
levels = unique(data$stage))
results <- lmer(Cases ~ Stage + (1|Week), data = data)
emm <- emmeans(results, ~ Stage)
pairs <- pairs(emm)
pairs_summary <- summary(pairs, adjust = "bonferroni") |>
as.data.frame() |>
separate(contrast, c('stage1', 'stage2'), sep = ' \\- ') |>
rename('group1' = 'stage1',
'group2' = 'stage2') |>
mutate(y.position = plot_range[2] * c(0.95, 0.85, 0.75),
p.value = ifelse(p.value < 0.001, '***', format(round(p.value, 3), nsmall = 3)))
View(data_2022)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
fig4_2
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
library(tidyverse)
library(lubridate)
library(ggsci)
library(patchwork)
library(openxlsx)
fill_color <- pal_npg()(3)
# Load data
df_raw <- read.csv('./report_pertussis.csv')
scientific_10 <- function(x) {
ifelse(x == 0, 0, parse(text = gsub("[+]", "", gsub("e", "%*%10^", scales::scientific_format()(x)))))
}
# clean data --------------------------------------------------------------
df_epiweek <- data.frame(date = seq.Date(from = as.Date('2015-01-04'), to = as.Date('2024-03-09'), by = 'day')) |>
mutate(Year = epiyear(date),
Week = epiweek(date)) |>
group_by(Year, Week) |>
summarise(Date = last(date),
.groups = 'drop')
df_us <- df_raw |>
filter(Country == 'US') |>
select(Year, Week, Cases, URL)
df_us <- left_join(df_epiweek, df_us, by = c('Year', 'Week')) |>
arrange(Date) |>
mutate(Cases = as.integer(Cases),
Country = 'US')
df_uk <- df_raw |>
filter(Country == 'UK') |>
select(Year, Week, Cases, URL)
df_uk <- left_join(df_epiweek, df_uk, by = c('Year', 'Week')) |>
arrange(Date) |>
mutate(Cases = as.integer(Cases),
Country = 'UK')
df_cn <- df_raw |>
filter(Country == 'CN') |>
select(Date, Year, Month, Cases, URL) |>
mutate(Cases = as.integer(Cases),
Date = as.Date(Date),
Country = 'CN')
df_au <- df_raw |>
filter(Country == 'AU') |>
select(Date, Year, Month, Cases, URL) |>
mutate(Cases = as.integer(Cases),
Date = as.Date(Date),
Country = 'AU')
df_clean <- bind_rows(df_us, df_uk, df_cn, df_au) |>
arrange(Date) |>
select(Country, Date, Year, Month, Week, Cases) |>
mutate(stage = case_when(
Date < as.Date('2020-01-01') ~ '2015 Jan. to 2019 Dec.',
Date >= as.Date('2020-01-01') & Date < as.Date('2023-07-01') ~ '2020 Jan. to 2023 Jun.',
Date >= as.Date('2023-07-01') ~ '2023 Jun. onwards'
))
rm(df_us, df_uk, df_cn, df_epiweek)
# plot ---------------------------------------------------------------------
ggplot(df_clean, aes(x = Date, y = Cases, color = Country)) +
geom_line() +
scale_x_date(date_labels = '%Y') +
scale_y_continuous(labels = scales::comma) +
facet_wrap(~Country, scales = 'free_y', nrow = 3) +
labs(title = 'Epidemic curve of pertussis cases',
x = 'Date',
y = 'Cases',
color = 'Country') +
theme_bw() +
theme(legend.position = 'none')
# figure 1 ----------------------------------------------------------------
i <- 1
country_list <- sort(unique(df_clean$Country))
ylabel_list <- c('Monthly incidence', 'Monthly incidence', 'Weekly incidence', 'Weekly incidence')
View(df_clean)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig1_epidemic_curve.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig3_visualization.R", echo=TRUE)
plot_all <- lapply(1:4, plot_data)
plot_all <- wrap_plots(plotlist = plot_all, ncol = 1)+
plot_layout(guides = "collect")&
theme(legend.position = 'bottom')
ggsave(filename = './main/Fig3.pdf',
plot = plot_all,
width = 12,
height = 10,
device = cairo_pdf,
family = 'Times New Roman')
fill_color <- pal_npg()(7)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig3_visualization.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig3_visualization.R", echo=TRUE)
library(tidyverse)
library(lubridate)
library(ggsci)
library(patchwork)
library(openxlsx)
library(lme4)
library(lmerTest)
library(emmeans)
library(ggpubr)
fill_color <- pal_npg()(3)
# Load data
df_raw <- read.xlsx('./Fig Data/fig1.xlsx', detectDates = T) |>
arrange(Date)
df_clean <- df_raw |>
group_by(Country, stage, Month, Week) |>
summarise(median = median(Cases),
Q1 = quantile(Cases, 0.25),
Q3 = quantile(Cases, 0.75),
.groups = 'drop')
scientific_10 <- function(x) {
ifelse(x == 0, 0, parse(text = gsub("[+]", "", gsub("e", "%*%10^", scales::scientific_format()(x)))))
}
# au ----------------------------------------------------------------------
data <- df_raw |>
filter(Country == 'AU')
data_2023 <- df_clean |>
filter(Country == 'AU') |>
mutate(month = factor(Month,
levels = c(7:12, 1:6),
labels = 101:112),
month = as.integer(as.character(month))) |>
filter(stage == '2023 Jun. onwards')
data_2022 <- df_clean |>
filter(Country == 'AU') |>
mutate(month = factor(Month,
levels = c(7:12, 1:6),
labels = 101:112),
month = as.integer(as.character(month))) |>
filter(stage != '2023 Jun. onwards')
plot_breaks <- pretty(c(0, max(data$Cases)))
plot_range <- range(plot_breaks)
data$Year <- as.factor(data$Year)
data$Month <- as.factor(data$Month)
data$Stage <- factor(data$stage,
levels = unique(data$stage))
results <- lmer(Cases ~ Stage + (1|Month), data = data)
emm <- emmeans(results, ~ Stage)
pairs <- pairs(emm)
pairs_summary <- summary(pairs, adjust = "bonferroni") |>
as.data.frame() |>
separate(contrast, c('stage1', 'stage2'), sep = ' \\- ') |>
rename('group1' = 'stage1',
'group2' = 'stage2') |>
mutate(y.position = plot_range[2] * c(0.95, 0.85, 0.75),
p.value = ifelse(p.value < 0.001, '***', format(round(p.value, 3), nsmall = 3)))
fig1_1 <- ggplot(data_2022, aes(x = month, y = median)) +
geom_vline(xintercept = 106.5,
linetype = 'dashed',
color = 'black',
size = 0.5) +
geom_smooth(aes(color = stage, fill = stage),
method = 'loess',
se = T,
linewidth = 0.7) +
geom_line(data = data_2023, aes(color = stage),
linewidth = 0.7) +
geom_ribbon(data = data_2023, aes(ymin = Q1, ymax = Q3, fill = stage), alpha = 0.3) +
scale_x_continuous(breaks = 101:112,
labels = month.abb[c(7:12, 1:6)],
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'a', x = 'Month', y = 'Monthly incidence', color = 'Stage') +
scale_color_manual(values = fill_color) +
scale_fill_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
legend.text = element_text(face = "bold", size = 12),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_text(size = 12, color = "black"))
fig1_1
fig1_1 <- ggplot(data_2022, aes(x = month, y = median)) +
geom_vline(xintercept = 106.5,
linetype = 'dashed',
color = 'black',
size = 0.5) +
geom_smooth(aes(color = stage, fill = stage),
method = 'loess',
se = T,
linewidth = 0.7) +
geom_line(data = data_2023, aes(color = stage),
linewidth = 0.7) +
geom_ribbon(data = data_2023, aes(ymin = Q1, ymax = Q3, fill = stage), alpha = 0.3) +
scale_x_continuous(breaks = 101:112,
labels = month.abb[c(7:12, 1:6)],
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'a', x = 'Month', y = 'Monthly incidence',
color = 'Stage', fill = 'Stage') +
scale_color_manual(values = fill_color) +
scale_fill_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
legend.text = element_text(face = "bold", size = 12),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_text(size = 12, color = "black"))
fig1_1
fig1_1 <- ggplot(data_2022, aes(x = month, y = median)) +
geom_vline(xintercept = 106.5,
linetype = 'dashed',
color = 'black',
size = 0.5) +
geom_smooth(aes(color = stage, fill = stage),
method = 'loess',
se = T,
linewidth = 0.7) +
geom_line(data = data_2023, aes(color = stage),
linewidth = 0.7) +
geom_ribbon(data = data_2023, aes(ymin = Q1, ymax = Q3, fill = stage), alpha = 0.3) +
scale_x_continuous(breaks = 101:112,
labels = month.abb[c(7:12, 1:6)],
expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'a', x = 'Month', y = 'Monthly incidence',
color = 'Stage', fill = 'Stage') +
scale_color_manual(values = fill_color) +
scale_fill_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.background = element_rect(fill = "transparent"),
legend.text = element_text(face = "bold", size = 12),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_text(size = 12, color = "black"))
fig1_1
fig1_2 <- ggplot(data, aes(x = stage, y = Cases)) +
geom_boxplot(aes(color = stage),
show.legend = F)+
stat_pvalue_manual(pairs_summary,
hide.ns = F) +
coord_cartesian(clip = "off")+
scale_y_continuous(expand = expansion(mult = c(0, 0)),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'b', x = NULL, y = 'Stage') +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.ticks.x = element_blank(),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
fig1_2
fig1_2 <- ggplot(data, aes(x = stage, y = Cases)) +
geom_boxplot(aes(color = stage),
show.legend = F)+
stat_pvalue_manual(pairs_summary,
hide.ns = F) +
coord_cartesian(clip = "off")+
scale_y_continuous(expand = expansion(mult = c(0, 0)),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'b', x = 'Stage', y = NULL) +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.ticks.x = element_blank(),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
fig1_2
fig1_2 <- ggplot(data, aes(x = stage, y = Cases)) +
geom_boxplot(aes(color = stage),
show.legend = F)+
stat_pvalue_manual(pairs_summary,
hide.ns = F) +
coord_cartesian(clip = "off")+
scale_y_continuous(expand = expansion(mult = c(0, 0)),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'b', x = 'Stage', y = NULL) +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
fig1_2
fig2_2 <- ggplot(data, aes(x = stage, y = Cases)) +
geom_boxplot(aes(color = stage),
show.legend = F)+
stat_pvalue_manual(pairs_summary,
hide.ns = F) +
coord_cartesian(clip = "off")+
scale_y_continuous(expand = expansion(mult = c(0, 0)),
label = scientific_10,
breaks = plot_breaks,
limits = plot_range) +
labs(title = 'd',  x = 'Stage', y = NULL) +
scale_color_manual(values = fill_color) +
theme_classic() +
theme(legend.box.just = "left",
legend.margin = margin(0, 0, 0, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
panel.background = element_rect(fill = "transparent", color = "transparent"),
plot.background = element_rect(fill = "transparent", color = "transparent"),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(face = "bold", size = 14, hjust = 0),
axis.title = element_text(face = "bold", size = 12, color = "black"),
axis.text = element_blank())
fig2_2
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
fig1_1
fig2_1
fig3_1
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
fig1_1
fig2_1
fig3_1
fig4_1
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig2_compare.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig3_visualization.R", echo=TRUE)
source("D:/OneDrive - stu.xmu.edu.cn/XMU/likangguo/2024/06 pertussis/WC_global/Analysis/fig3_visualization.R", echo=TRUE)
